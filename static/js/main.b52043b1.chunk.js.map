{"version":3,"sources":["components/ShareList/play2.svg","components/ShareList/ShareList.js","components/Header/Header.js","components/AudioPlayer/AudioPlayer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","yearOptions","year","this","props","changeYear","Navbar","expand","variant","bg","sticky","className","Brand","Dropdown","alignRight","Toggle","id","Menu","map","Item","key","href","onClick","e","handleYearChange","React","Component","items","number","push","Pagination","active","ShareList","changedPage","speakers","speakersArray","filter","changePage","bind","newSpeakers","Math","ceil","length","setState","prevProps","console","log","changeAudio","Container","slice","a","Row","Col","xs","name","day","month","src","playIcon","alt","height","handleClick","AudioPlayer","playerRef","createRef","ref","controls","autoPlay","App","audioSrc","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b52043b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play2.efffffa6.svg\";","import React from 'react';\r\nimport './ShareList.scss'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n// import Button from 'react-bootstrap/Button'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport playIcon from '../ShareList/play2.svg'\r\n\r\nlet active = 2;\r\nlet items = [];\r\nfor (let number = 1; number <= 5; number++) {\r\n  items.push(\r\n    <Pagination.Item key={number} active={number === active}>\r\n      {number}\r\n    </Pagination.Item>,\r\n  );\r\n}\r\n\r\nclass ShareList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      year: this.props.year,\r\n      items: [],\r\n      active: 1,\r\n      changedPage: false\r\n    }\r\n    this.state.speakers = this.props.speakersArray.filter(e => e.year === this.state.year)\r\n    this.changePage = this.changePage.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    let newSpeakers = this.props.speakersArray.filter(e => e.year === this.props.year)\r\n    let items = [];\r\n    for (let number = 1; number <= Math.ceil(newSpeakers.length / 10); number++) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === this.state.active} onClick={e => this.changePage(number, e)} >\r\n          {number}\r\n        </Pagination.Item>,\r\n      );\r\n    }\r\n    this.setState({\r\n      year: this.props.year,\r\n      speakers: newSpeakers,\r\n      items: items,\r\n      changedPage: false\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if ((prevProps.year !== this.props.year) || this.state.changedPage) {\r\n      let newSpeakers = this.props.speakersArray.filter(e => e.year === this.props.year)\r\n      let items = [];\r\n      for (let number = 1; number <= Math.ceil(newSpeakers.length / 10); number++) {\r\n        items.push(\r\n          <Pagination.Item key={number} active={number === this.state.active} onClick={e => this.changePage(number, e)} >\r\n            {number}\r\n          </Pagination.Item>,\r\n        );\r\n      }\r\n      this.setState({\r\n        year: this.props.year,\r\n        speakers: newSpeakers,\r\n        items: items,\r\n        changedPage: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick(href) {\r\n    console.log(href)\r\n    this.props.changeAudio(href)\r\n  }\r\n  changePage(number) {\r\n    this.setState({\r\n      active: number,\r\n      changedPage: true\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.speakers.slice((this.state.active - 1) * 10, (this.state.active - 1) * 10 + 10).map(a => {\r\n          if (a.year === this.state.year) {\r\n            return (\r\n              <Row key={a.href} className=\"speaker-row\">\r\n                <Col xs={5} className=\"name\">{a.name}</Col>\r\n                <Col xs={5} className=\"date\">{a.day} {a.month} {a.year}</Col>\r\n                <Col xs={2}>\r\n                  <img src={playIcon} alt=\"play\" height=\"40px\" onClick={e => this.handleClick(a.href, e)} />\r\n                </Col>\r\n              </Row>\r\n            )\r\n          } else {\r\n            return null\r\n          }\r\n        })}\r\n\r\n\r\n        <Row className=\"pagination-container\">\r\n\r\n          <Pagination>\r\n            {this.state.items}\r\n          </Pagination>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShareList;","import React from 'react';\r\nimport './Header.scss'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nclass Header extends React.Component {\r\n  state = {}\r\n  handleYearChange(year) {\r\n    this.props.changeYear(year)\r\n  }\r\n  yearOptions = ['2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006']\r\n  render() {\r\n    return (\r\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"babyblue\" sticky=\"top\" className=\"justify-content-between\">\r\n        <Navbar.Brand>Trafalgar Shares</Navbar.Brand>\r\n\r\n        <Dropdown className=\"justify-content-end\" alignRight >\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n            {this.props.year}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {this.yearOptions.map(year => {\r\n              return <Dropdown.Item key={year} href=\"#\" onClick={e => this.handleYearChange(year, e)}>{year}</Dropdown.Item>\r\n            })}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n\r\n\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './AudioPlayer.scss';\r\n\r\nclass AudioPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.playerRef = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"audio-bar\">\r\n        <div className=\"grey-background\">\r\n          <audio ref={this.playerRef} src={this.props.src} controls autoPlay />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioPlayer;","import React from 'react';\nimport './App.scss';\nimport speakersArray from '../../util/speakersData.json'\nimport Header from '../Header/Header'\nimport ShareList from '../ShareList/ShareList'\nimport AudioPlayer from '../AudioPlayer/AudioPlayer'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { speakersArray: speakersArray, audioSrc: '', year: '2020' }\n    this.changeAudio = this.changeAudio.bind(this)\n    this.changeYear = this.changeYear.bind(this)\n  }\n  changeAudio(href) {\n    this.setState({ audioSrc: href })\n  }\n  changeYear(year) {\n    this.setState({ year: year })\n  }\n  render() {\n    return (\n      <div>\n        <Header year={this.state.year} changeYear={this.changeYear} />\n        <ShareList speakersArray={this.state.speakersArray} changeAudio={this.changeAudio} year={this.state.year} />\n        <AudioPlayer src={this.state.audioSrc} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}